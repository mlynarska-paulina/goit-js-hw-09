{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbQ,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAUC,GACnEA,EAAMC,iBACN,MAAMC,EAAaC,SAASN,SAASC,cAAc,kBAAkBM,OAC/DC,EAAYF,SAASN,SAASC,cAAc,iBAAiBM,OAC7DE,EAAcH,SAASN,SAASC,cAAc,mBAAmBM,OAEvE,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAaC,IAAK,CAEpCpB,EAAcoB,EAAI,EADGL,EAAaK,EAAIF,GAEnCG,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAAxB,GAASyB,OAAOC,QACd,uBAAqBvB,QAAiBC,MAAU,IAGnDuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAAxB,GAASyB,OAAOG,QACd,sBAAoBzB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.querySelector('.form').addEventListener('submit', function (event) {\n  event.preventDefault();\n  const delayInput = parseInt(document.querySelector('[name=\"delay\"]').value);\n  const stepInput = parseInt(document.querySelector('[name=\"step\"]').value);\n  const amountInput = parseInt(document.querySelector('[name=\"amount\"]').value);\n\n  for (let i = 0; i < amountInput; i++) {\n    const currentDelay = delayInput + i * stepInput;\n    createPromise(i + 1, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delayInput","parseInt","value","stepInput","amountInput","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.9000b691.js.map"}